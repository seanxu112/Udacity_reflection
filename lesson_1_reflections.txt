How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I think it is much easier because we can compare the error side by side to see what went wrong. Another thing is that we do not have to read every single code to find out what's wrong since all of the same text are ignored in diff command.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can easily store back older versions. I can spend most of my time to write the code,
    rather than finding out errors that I made due to overwrite previous versions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Google docs sometimes saved something I didnt want to save.
    Manually saves, I usually forget to save the files.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because you would want all the files in one commit to function well on its own.

How can you use the commands git log and git diff to view the history of files?

    I get use the information about what has changed between two versions to figure out
    which file should I fix or take out.

How might using version control make you more confident to make changes that
could break something?

    I do not have to worry about whether I made the code not executable.

Now that you have your workspace set up, what do you want to try using Git for?

    Version Control.

